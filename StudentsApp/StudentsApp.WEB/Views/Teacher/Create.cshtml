@model StudentsApp.WEB.Models.Entities.Register.RegisterTeacher

@{
    ViewBag.Title = "Create";
}

<h2>Регистрация преподавателя</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.FacultyId)

    <div class="row">
        <div class="form-horizontal col-md-4">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.Subjects, htmlAttributes: new { @class = "control-label" })
            @for (int i = 0; i < Model.GroupSubjects.Count(); i++)
            {
                var groupS = Model.GroupSubjects.ElementAt(i);
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#@i">@groupS.Key</a>
                        </h4>
                    </div>
                    <div id="@i" class="panel-collapse collapse in">
                        <div class="panel-body">
                            @foreach (var subject in groupS)
                            {
                                var item = new SelectListItem()
                                {
                                    Text = subject.SubjectName,
                                    Value = subject.Id.ToString(),
                                    Selected = Model.SelectedIdSubjects.Contains(subject.Id.ToString())
                                };
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="SelectedIdSubjects" @(item.Selected ? "checked=\"checked\"" : "") value="@item.Value" />
                                        @item.Text
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                    @Html.DropDownListFor(model => model.SelectedIdPosts, Model.Posts, new { @class = "form-control" })
                </div>
            }
        </div>
    </div>
}
<div>
    @Html.ActionLink("Вернуться", "Index")
</div>
